/*
Дана следующая программа.

 1 int main() {
 2 unsigned int x1 = 0, x2 = 0; int s = 1;
 3
 4 while (nondet()) {
 5 if (s == 1) x1++;
 6 else if (s == 2) x2++;
 7
 8 s++;
 9 if (s == 5) s = 1;
10
11 if (s >= 4) {
12 // Invalid safety property
13 ERROR: return 1;
14 }
15 }
16 }

 Функция while программы ниже выполняет то же действие, что и цикл в строках 4-15. 
 Недетерминированность этого цикла моделируется за счет введения в функцию while первого аргумента e.p - параметра, определяющего, 
 нужно ли продолжать цикл.
 Тест строки 11 программы выше осуществляется функцией TestIncorrect.
*/

/***********************************************/
/*          исходная программа                 */
/***********************************************/
*$MST_FROM_ENTRY;
$ENTRY Go {
	e.p = <while (e.p) (x1 )(x2 )(s 'I')>;
}

while {
 () (x1 e.x1)(x2 e.x2)(s e.s) = <TestIncorrect (x1 e.x1)(x2 e.x2)(s e.s)>;

 ('T' e.p) (x1 e.x1)(x2 e.x2)(s 'I')                                       
	= <while (e.p) (x1 'I'e.x1)(x2 e.x2)(s 'II')>;
 ('T' e.p) (x1 e.x1)(x2 e.x2)(s 'II') 
	= <while (e.p) (x1 e.x1)(x2 'I'e.x2)(s 'III')>;
 ('T' e.p) (x1 e.x1)(x2 e.x2)(s 'IIII') 
	= <while (e.p) (x1 e.x1)(x2 e.x2)(s 'I')>;
 ('T' e.p) (x1 e.x1)(x2 e.x2)(s e.s) 
	= <while (e.p) (x1 e.x1)(x2 e.x2)(s 'I'e.s)>;       
}


TestIncorrect {
 (x1 e.x1)(x2 e.x2)(s 'IIII'e.s) = 'F';
 (x1 e.x1)(x2 e.x2)(s e.s) = 'T';
}

/***********************************************/
/*          остаточная программа               */
/***********************************************/

/*
$ENTRY Go {
 e.1 =  <while_12_0 (e.1) ()>;
}


while_12_0 {
 () (e.1) =  'T';
 ('T') (e.1) =  'T';
 ('TT') (e.1) =  'T';
 ('TTT') (e.1) =  'F';
 ('TTTT' e.1) (e.2) =  <while_12_0 (e.1) ('I' e.2)>;
}

*/
