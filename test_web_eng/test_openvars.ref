/*
 Пример на обработку открытых переменных.
 Дано слово. Заменяем в нем все буквы на 'C', затем приписываем к результату исходное слово
 и заменяем в этом составном слове все буквы 'A' на 'D'.

 MSCP-A определил, что первое слово (со всеми буквами 'C') трогать не надо,
 но не смог сохранить информацию, что первый и третий аргумент Go пусты или непусты одновременно.
 Кроме того, он не справляется с этой задачей, если поменять в Go e.x и <H e.x> местами.
*/

/***********************************************/
/*          исходная программа                 */
/***********************************************/

$ENTRY Go {
    e.x = <F <H e.x> e.x>; 
}

F {
    e.1 'A' e.2 = e.1 'D' <F e.2>;
    e.Z = e.Z;
}


H {
 	= ;
	t.x e.1 = 'C' <H e.1>;
}

/***********************************************/
/*          остаточная программа               */
/***********************************************/
/*
$ENTRY Go {
 e.1 =  <F_0 () (e.1) (e.1)>;
}


F_12_1 {
 (e.1) (e.2 'A' e.3) =  <F_12_1 (e.1 e.2 'D') (e.3)>;
 (e.1) (e.2) =  'D' e.1 e.2;
}


F_12_2 {
 (e.1) (e.2 'A' e.3) =  <F_12_2 (e.1 'D' e.2) (e.3)>;
 (e.1) (e.2) =  e.1 'D' e.2;
}


F_12_3 {
 (e.1) (t.1) (e.2) (e.3 'A' e.4) =  <F_12_3 (e.1) (t.1) (e.2 'D' e.3) (e.4)>;
 (e.1) (t.1) (e.2) (e.3) =  e.1 t.1 e.2 'D' e.3;
}


F_0 {
 () () ('A' e.1) =  <F_12_1 () (e.1)>;
 (e.1) () ('A' e.2) =  <F_12_2 (e.1) (e.2)>;
 (e.1) () (t.1 e.2 'A' e.3) =  <F_12_3 (e.1) (t.1) (e.2) (e.3)>;
 (e.1) () (e.2) =  e.1 e.2;
 (e.1) (t.1 e.2) (e.3) =  <F_0 (e.1 'C') (e.2) (e.3)>;
}
*/
