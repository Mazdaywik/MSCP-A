=================================================================================
  GENERALIZED UPWARDS: (0 0 0 ) and (0 0 ) with upper config
    (Call ((CheckQuadAux_0 (1 2 10 ))2 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_0 (1 2 10 ))22 )(Bracket  (Variable e 37 ))(Bracket  (Variable e 35 )))
  Generalized MGUs: 
    (assign (par e 37 )((par e x1 ))(A(par e 1 )))
    (assign (par e 35 )((par e x1 ))((par e 1 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_0 (3 4 5 6 7 8 9 )((*(par e 37 ))(*(par e 35 ))))
produce conditions:

    (OR (T)(((par e 37 ))to (AA(var e Neg12 )))(((par e 35 ))to ()))
    (OR (D)(((par e 37 ))to ((var e Neg13 )AAAAAA(var e Neg14 )))(((par e 35 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 0 0 0 0 ) and (0 0 0 0 ) with upper config
    (Call ((CheckQuadAux_0 (1 2 3 7 8 9 10 ))23 )(Bracket  (Variable e 37 ))(Bracket  (Variable e 51 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_0 (1 2 3 7 8 9 10 ))23 )(Bracket  (Variable e 37 ))(Bracket  (Variable e 51 )))
  Generalized MGUs: 
    (assign (par e 51 )((par e 51 ))((par e 108 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 0 0 0 )With (assign (par e 51 )((par e 108 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 0 0 0 1 ) and (0 0 0 0 ) with upper config
    (Call ((CheckQuadAux_0 (1 2 3 7 8 9 10 ))23 )(Bracket  (Variable e 37 ))(Bracket  (Variable e 51 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_0 (1 2 3 7 8 9 10 ))23 )(Bracket  (Variable e 37 ))(Bracket  (Variable e 51 )))
  Generalized MGUs: 
    (assign (par e 51 )((par e 51 ))((par e 109 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 0 0 0 )With (assign (par e 51 )((par e 109 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 0 0 1 0 ) and (0 0 0 1 ) with upper config
    (Call ((CheckQuadAux_0 (1 2 3 7 8 9 10 ))24 )(Bracket  (Variable e 37 ))(Bracket  (Variable e 55 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_0 (1 2 3 7 8 9 10 ))24 )(Bracket  (Variable e 37 ))(Bracket  (Variable e 55 )))
  Generalized MGUs: 
    (assign (par e 55 )((par e 55 ))((par e 295 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 0 0 1 )With (assign (par e 55 )((par e 295 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 0 0 1 1 ) and (0 0 0 1 ) with upper config
    (Call ((CheckQuadAux_0 (1 2 3 7 8 9 10 ))24 )(Bracket  (Variable e 37 ))(Bracket  (Variable e 55 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_0 (1 2 3 7 8 9 10 ))24 )(Bracket  (Variable e 37 ))(Bracket  (Variable e 55 )))
  Generalized MGUs: 
    (assign (par e 55 )((par e 55 ))((par e 296 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 0 0 1 )With (assign (par e 55 )((par e 296 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 1 0 ) and (0 1 ) with upper config
    (Call ((CheckQuadAux_1 (1 2 7 ))3 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_1 (1 2 7 ))41 )(Bracket  (Variable e 509 ))(Bracket  (Variable e 507 )))
  Generalized MGUs: 
    (assign (par e 509 )((par e x1 ))(A(par e 482 )))
    (assign (par e 507 )((par e x1 ))((par e 482 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_1 (3 4 5 6 )((*(par e 509 ))(*(par e 507 ))))
produce conditions:

    (OR (T)(((par e 509 ))to (AAAB(var e Neg6 )))(((par e 507 ))to ()))
    (OR (D)(((par e 509 ))to ((var e Neg7 )AAABAAAB(var e Neg8 )))(((par e 507 ))to ()))
    (OR (D)(((par e 509 ))to ((var e Neg11 )AAAA(var e Neg12 )))(((par e 507 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 1 0 0 0 ) and (0 1 0 0 ) with upper config
    (Call ((CheckQuadAux_1 (1 2 3 4 5 6 7 ))42 )(Bracket  (Variable e 509 ))(Bracket  (Variable e 521 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_1 (1 2 3 4 5 6 7 ))42 )(Bracket  (Variable e 509 ))(Bracket  (Variable e 521 )))
  Generalized MGUs: 
    (assign (par e 521 )((par e 521 ))((par e 622 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 1 0 0 )With (assign (par e 521 )((par e 622 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 1 0 0 1 ) and (0 1 0 0 ) with upper config
    (Call ((CheckQuadAux_1 (1 2 3 4 5 6 7 ))42 )(Bracket  (Variable e 509 ))(Bracket  (Variable e 521 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_1 (1 2 3 4 5 6 7 ))42 )(Bracket  (Variable e 509 ))(Bracket  (Variable e 521 )))
  Generalized MGUs: 
    (assign (par e 521 )((par e 521 ))((par e 623 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 1 0 0 )With (assign (par e 521 )((par e 623 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 1 0 1 0 ) and (0 1 0 1 ) with upper config
    (Call ((CheckQuadAux_1 (1 2 3 4 5 6 7 ))43 )(Bracket  (Variable e 509 ))(Bracket  (Variable e 527 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_1 (1 2 3 4 5 6 7 ))43 )(Bracket  (Variable e 509 ))(Bracket  (Variable e 527 )))
  Generalized MGUs: 
    (assign (par e 527 )((par e 527 ))((par e 872 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 1 0 1 )With (assign (par e 527 )((par e 872 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 1 0 1 1 ) and (0 1 0 1 ) with upper config
    (Call ((CheckQuadAux_1 (1 2 3 4 5 6 7 ))43 )(Bracket  (Variable e 509 ))(Bracket  (Variable e 527 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_1 (1 2 3 4 5 6 7 ))43 )(Bracket  (Variable e 509 ))(Bracket  (Variable e 527 )))
  Generalized MGUs: 
    (assign (par e 527 )((par e 527 ))((par e 873 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 1 0 1 )With (assign (par e 527 )((par e 873 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 2 0 ) and (0 2 ) with upper config
    (Call ((CheckQuadAux_2 (1 2 10 ))4 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_2 (1 2 10 ))60 )(Bracket  (Variable e 1155 ))(Bracket  (Variable e 1153 )))
  Generalized MGUs: 
    (assign (par e 1155 )((par e x1 ))(A(par e 1122 )))
    (assign (par e 1153 )((par e x1 ))((par e 1122 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_2 (3 4 5 6 7 8 9 )((*(par e 1155 ))(*(par e 1153 ))))
produce conditions:

    (OR (T)(((par e 1155 ))to (AABA(var e Neg6 )))(((par e 1153 ))to ()))
    (OR (D)(((par e 1155 ))to ((var e Neg8 )AABAAABA(var e Neg9 )))(((par e 1153 ))to ()))
    (OR (T)(((par e 1155 ))to (AB(var e Neg10 )))(((par e 1153 ))to ()))
    (OR (D)(((par e 1155 ))to ((var e Neg11 )AABAAB(var e Neg12 )))(((par e 1153 ))to ()))
    (OR (T)(((par e 1155 ))to (AAA(var e Neg13 )))(((par e 1153 ))to ()))
    (OR (D)(((par e 1155 ))to ((var e Neg14 )AAAA(var e Neg15 )))(((par e 1153 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 2 0 0 0 ) and (0 2 0 0 ) with upper config
    (Call ((CheckQuadAux_2 (1 2 3 4 5 6 7 8 9 10 ))61 )(Bracket  (Variable e 1155 ))(Bracket  (Variable e 1170 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_2 (1 2 3 4 5 6 7 8 9 10 ))61 )(Bracket  (Variable e 1155 ))(Bracket  (Variable e 1170 )))
  Generalized MGUs: 
    (assign (par e 1170 )((par e 1170 ))((par e 1317 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 2 0 0 )With (assign (par e 1170 )((par e 1317 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 2 0 0 1 ) and (0 2 0 0 ) with upper config
    (Call ((CheckQuadAux_2 (1 2 3 4 5 6 7 8 9 10 ))61 )(Bracket  (Variable e 1155 ))(Bracket  (Variable e 1170 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_2 (1 2 3 4 5 6 7 8 9 10 ))61 )(Bracket  (Variable e 1155 ))(Bracket  (Variable e 1170 )))
  Generalized MGUs: 
    (assign (par e 1170 )((par e 1170 ))((par e 1318 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 2 0 0 )With (assign (par e 1170 )((par e 1318 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 2 0 1 0 ) and (0 2 0 1 ) with upper config
    (Call ((CheckQuadAux_2 (1 2 3 4 5 6 7 8 9 10 ))62 )(Bracket  (Variable e 1155 ))(Bracket  (Variable e 1180 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_2 (1 2 3 4 5 6 7 8 9 10 ))62 )(Bracket  (Variable e 1155 ))(Bracket  (Variable e 1180 )))
  Generalized MGUs: 
    (assign (par e 1180 )((par e 1180 ))((par e 1630 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 2 0 1 )With (assign (par e 1180 )((par e 1630 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 2 0 1 1 ) and (0 2 0 1 ) with upper config
    (Call ((CheckQuadAux_2 (1 2 3 4 5 6 7 8 9 10 ))62 )(Bracket  (Variable e 1155 ))(Bracket  (Variable e 1180 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_2 (1 2 3 4 5 6 7 8 9 10 ))62 )(Bracket  (Variable e 1155 ))(Bracket  (Variable e 1180 )))
  Generalized MGUs: 
    (assign (par e 1180 )((par e 1180 ))((par e 1631 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 2 0 1 )With (assign (par e 1180 )((par e 1631 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 3 0 ) and (0 3 ) with upper config
    (Call ((CheckQuadAux_3 (1 2 7 ))5 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_3 (1 2 7 ))79 )(Bracket  (Variable e 1970 ))(Bracket  (Variable e 1968 )))
  Generalized MGUs: 
    (assign (par e 1970 )((par e x1 ))(A(par e 1943 )))
    (assign (par e 1968 )((par e x1 ))((par e 1943 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_3 (3 4 5 6 )((*(par e 1970 ))(*(par e 1968 ))))
produce conditions:

    (OR (T)(((par e 1970 ))to (AABB(var e Neg6 )))(((par e 1968 ))to ()))
    (OR (D)(((par e 1970 ))to ((var e Neg7 )AABBAABB(var e Neg8 )))(((par e 1968 ))to ()))
    (OR (D)(((par e 1970 ))to ((var e Neg9 )AABAAB(var e Neg10 )))(((par e 1968 ))to ()))
    (OR (D)(((par e 1970 ))to ((var e Neg11 )AAAA(var e Neg12 )))(((par e 1968 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 3 0 0 0 ) and (0 3 0 0 ) with upper config
    (Call ((CheckQuadAux_3 (1 2 3 4 5 6 7 ))80 )(Bracket  (Variable e 1970 ))(Bracket  (Variable e 1982 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_3 (1 2 3 4 5 6 7 ))80 )(Bracket  (Variable e 1970 ))(Bracket  (Variable e 1982 )))
  Generalized MGUs: 
    (assign (par e 1982 )((par e 1982 ))((par e 2098 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 3 0 0 )With (assign (par e 1982 )((par e 2098 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 3 0 0 1 ) and (0 3 0 0 ) with upper config
    (Call ((CheckQuadAux_3 (1 2 3 4 5 6 7 ))80 )(Bracket  (Variable e 1970 ))(Bracket  (Variable e 1982 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_3 (1 2 3 4 5 6 7 ))80 )(Bracket  (Variable e 1970 ))(Bracket  (Variable e 1982 )))
  Generalized MGUs: 
    (assign (par e 1982 )((par e 1982 ))((par e 2099 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 3 0 0 )With (assign (par e 1982 )((par e 2099 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 3 0 1 0 ) and (0 3 0 1 ) with upper config
    (Call ((CheckQuadAux_3 (1 2 3 4 5 6 7 ))81 )(Bracket  (Variable e 1970 ))(Bracket  (Variable e 1990 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_3 (1 2 3 4 5 6 7 ))81 )(Bracket  (Variable e 1970 ))(Bracket  (Variable e 1990 )))
  Generalized MGUs: 
    (assign (par e 1990 )((par e 1990 ))((par e 2318 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 3 0 1 )With (assign (par e 1990 )((par e 2318 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 3 0 1 1 ) and (0 3 0 1 ) with upper config
    (Call ((CheckQuadAux_3 (1 2 3 4 5 6 7 ))81 )(Bracket  (Variable e 1970 ))(Bracket  (Variable e 1990 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_3 (1 2 3 4 5 6 7 ))81 )(Bracket  (Variable e 1970 ))(Bracket  (Variable e 1990 )))
  Generalized MGUs: 
    (assign (par e 1990 )((par e 1990 ))((par e 2319 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 3 0 1 )With (assign (par e 1990 )((par e 2319 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 4 0 ) and (0 4 ) with upper config
    (Call ((CheckQuadAux_4 (1 2 9 ))6 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_4 (1 2 9 ))98 )(Bracket  (Variable e 2573 ))(Bracket  (Variable e 2571 )))
  Generalized MGUs: 
    (assign (par e 2573 )((par e x1 ))(A(par e 2538 )))
    (assign (par e 2571 )((par e x1 ))((par e 2538 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_4 (3 4 5 6 7 8 )((*(par e 2573 ))(*(par e 2571 ))))
produce conditions:

    (OR (T)(((par e 2573 ))to (ABAA(var e Neg7 )))(((par e 2571 ))to ()))
    (OR (D)(((par e 2573 ))to ((var e Neg9 )ABAAABAA(var e Neg10 )))(((par e 2571 ))to ()))
    (OR (T)(((par e 2573 ))to (BA(var e Neg11 )))(((par e 2571 ))to ()))
    (OR (D)(((par e 2573 ))to ((var e Neg12 )ABAABA(var e Neg13 )))(((par e 2571 ))to ()))
    (OR (D)(((par e 2573 ))to ((var e Neg14 )ABAB(var e Neg15 )))(((par e 2571 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 4 0 0 0 ) and (0 4 0 0 ) with upper config
    (Call ((CheckQuadAux_4 (1 2 3 4 5 6 7 8 9 ))99 )(Bracket  (Variable e 2573 ))(Bracket  (Variable e 2587 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_4 (1 2 3 4 5 6 7 8 9 ))99 )(Bracket  (Variable e 2573 ))(Bracket  (Variable e 2587 )))
  Generalized MGUs: 
    (assign (par e 2587 )((par e 2587 ))((par e 2721 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 4 0 0 )With (assign (par e 2587 )((par e 2721 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 4 0 0 1 ) and (0 4 0 0 ) with upper config
    (Call ((CheckQuadAux_4 (1 2 3 4 5 6 7 8 9 ))99 )(Bracket  (Variable e 2573 ))(Bracket  (Variable e 2587 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_4 (1 2 3 4 5 6 7 8 9 ))99 )(Bracket  (Variable e 2573 ))(Bracket  (Variable e 2587 )))
  Generalized MGUs: 
    (assign (par e 2587 )((par e 2587 ))((par e 2722 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 4 0 0 )With (assign (par e 2587 )((par e 2722 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 4 0 1 0 ) and (0 4 0 1 ) with upper config
    (Call ((CheckQuadAux_4 (1 2 3 4 5 6 7 8 9 ))100 )(Bracket  (Variable e 2573 ))(Bracket  (Variable e 2596 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_4 (1 2 3 4 5 6 7 8 9 ))100 )(Bracket  (Variable e 2573 ))(Bracket  (Variable e 2596 )))
  Generalized MGUs: 
    (assign (par e 2596 )((par e 2596 ))((par e 3001 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 4 0 1 )With (assign (par e 2596 )((par e 3001 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 4 0 1 1 ) and (0 4 0 1 ) with upper config
    (Call ((CheckQuadAux_4 (1 2 3 4 5 6 7 8 9 ))100 )(Bracket  (Variable e 2573 ))(Bracket  (Variable e 2596 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_4 (1 2 3 4 5 6 7 8 9 ))100 )(Bracket  (Variable e 2573 ))(Bracket  (Variable e 2596 )))
  Generalized MGUs: 
    (assign (par e 2596 )((par e 2596 ))((par e 3002 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 4 0 1 )With (assign (par e 2596 )((par e 3002 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 5 0 ) and (0 5 ) with upper config
    (Call ((CheckQuadAux_5 (1 2 8 ))7 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_5 (1 2 8 ))117 )(Bracket  (Variable e 3319 ))(Bracket  (Variable e 3317 )))
  Generalized MGUs: 
    (assign (par e 3319 )((par e x1 ))(A(par e 3281 )))
    (assign (par e 3317 )((par e x1 ))((par e 3281 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_5 (3 4 5 6 7 )((*(par e 3319 ))(*(par e 3317 ))))
produce conditions:

    (OR (T)(((par e 3319 ))to (ABAB(var e Neg7 )))(((par e 3317 ))to ()))
    (OR (D)(((par e 3319 ))to ((var e Neg9 )ABABABAB(var e Neg10 )))(((par e 3317 ))to ()))
    (OR (T)(((par e 3319 ))to (AABA(var e Neg11 )))(((par e 3317 ))to ()))
    (OR (D)(((par e 3319 ))to ((var e Neg12 )ABAABA(var e Neg13 )))(((par e 3317 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 5 0 0 0 ) and (0 5 0 0 ) with upper config
    (Call ((CheckQuadAux_5 (1 2 3 5 6 7 8 ))118 )(Bracket  (Variable e 3319 ))(Bracket  (Variable e 3331 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_5 (1 2 3 5 6 7 8 ))118 )(Bracket  (Variable e 3319 ))(Bracket  (Variable e 3331 )))
  Generalized MGUs: 
    (assign (par e 3331 )((par e 3331 ))((par e 3420 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 5 0 0 )With (assign (par e 3331 )((par e 3420 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 5 0 0 1 ) and (0 5 0 0 ) with upper config
    (Call ((CheckQuadAux_5 (1 2 3 5 6 7 8 ))118 )(Bracket  (Variable e 3319 ))(Bracket  (Variable e 3331 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_5 (1 2 3 5 6 7 8 ))118 )(Bracket  (Variable e 3319 ))(Bracket  (Variable e 3331 )))
  Generalized MGUs: 
    (assign (par e 3331 )((par e 3331 ))((par e 3421 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 5 0 0 )With (assign (par e 3331 )((par e 3421 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 5 0 1 0 ) and (0 5 0 1 ) with upper config
    (Call ((CheckQuadAux_5 (1 2 3 5 6 7 8 ))119 )(Bracket  (Variable e 3319 ))(Bracket  (Variable e 3338 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_5 (1 2 3 5 6 7 8 ))119 )(Bracket  (Variable e 3319 ))(Bracket  (Variable e 3338 )))
  Generalized MGUs: 
    (assign (par e 3338 )((par e 3338 ))((par e 3589 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 5 0 1 )With (assign (par e 3338 )((par e 3589 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 5 0 1 1 ) and (0 5 0 1 ) with upper config
    (Call ((CheckQuadAux_5 (1 2 3 5 6 7 8 ))119 )(Bracket  (Variable e 3319 ))(Bracket  (Variable e 3338 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_5 (1 2 3 5 6 7 8 ))119 )(Bracket  (Variable e 3319 ))(Bracket  (Variable e 3338 )))
  Generalized MGUs: 
    (assign (par e 3338 )((par e 3338 ))((par e 3590 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 5 0 1 )With (assign (par e 3338 )((par e 3590 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
Unary parameter is pushed:
(par e 3811 )A(par e 3814 ) to A(par e 3811 )(par e 3814 )
=================================================================================
  GENERALIZED UPWARDS: (0 6 0 0 ) and (0 6 0 ) with upper config
    (Call ((CheckQuadAux_6 (1 2 10 ))132 )(Bracket  A(Variable e 3758 ))(Bracket  (Variable e 3758 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_6 (1 2 10 ))139 )(Bracket  A(Variable e 3825 ))(Bracket  (Variable e 3814 )))
  Generalized MGUs: 
    (assign (par e 3814 )((par e 3758 ))((par e 3773 )))
    (assign (par e 3825 )((par e 3758 ))(A(par e 3773 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_6 (3 4 5 6 7 8 9 )((*A(par e 3825 ))(*(par e 3814 ))))
produce conditions:

    (OR (T)(((par e 3825 ))to (BBA(var e Neg16 )))(((par e 3814 ))to ()))
    (OR (D)(((par e 3825 ))to ((var e Neg19 )ABBAABBA(var e Neg20 )))(((par e 3814 ))to ()))
    (OR (D)(((par e 3825 ))to ((var e Neg23 )ABBABB(var e Neg24 )))(((par e 3814 ))to ()))
    (OR (T)(((par e 3825 ))to (BAB(var e Neg26 )))(((par e 3814 ))to ()))
    (OR (D)(((par e 3825 ))to ((var e Neg27 )ABAB(var e Neg28 )))(((par e 3814 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 6 0 0 0 0 ) and (0 6 0 0 0 ) with upper config
    (Call ((CheckQuadAux_6 (1 2 3 5 7 9 10 ))140 )(Bracket  A(Variable e 3825 ))(Bracket  (Variable e 3836 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_6 (1 2 3 5 7 9 10 ))140 )(Bracket  A(Variable e 3825 ))(Bracket  (Variable e 3836 )))
  Generalized MGUs: 
    (assign (par e 3836 )((par e 3836 ))((par e 3964 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 6 0 0 0 )With (assign (par e 3836 )((par e 3964 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 6 0 0 0 1 ) and (0 6 0 0 0 ) with upper config
    (Call ((CheckQuadAux_6 (1 2 3 5 7 9 10 ))140 )(Bracket  A(Variable e 3825 ))(Bracket  (Variable e 3836 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_6 (1 2 3 5 7 9 10 ))140 )(Bracket  A(Variable e 3825 ))(Bracket  (Variable e 3836 )))
  Generalized MGUs: 
    (assign (par e 3836 )((par e 3836 ))((par e 3965 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 6 0 0 0 )With (assign (par e 3836 )((par e 3965 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 6 0 0 1 0 ) and (0 6 0 0 1 ) with upper config
    (Call ((CheckQuadAux_6 (1 2 3 5 7 9 10 ))141 )(Bracket  A(Variable e 3825 ))(Bracket  (Variable e 3845 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_6 (1 2 3 5 7 9 10 ))141 )(Bracket  A(Variable e 3825 ))(Bracket  (Variable e 3845 )))
  Generalized MGUs: 
    (assign (par e 3845 )((par e 3845 ))((par e 4223 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 6 0 0 1 )With (assign (par e 3845 )((par e 4223 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 6 0 0 1 1 ) and (0 6 0 0 1 ) with upper config
    (Call ((CheckQuadAux_6 (1 2 3 5 7 9 10 ))141 )(Bracket  A(Variable e 3825 ))(Bracket  (Variable e 3845 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_6 (1 2 3 5 7 9 10 ))141 )(Bracket  A(Variable e 3825 ))(Bracket  (Variable e 3845 )))
  Generalized MGUs: 
    (assign (par e 3845 )((par e 3845 ))((par e 4224 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 6 0 0 1 )With (assign (par e 3845 )((par e 4224 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 6 1 ) and (0 6 ) with upper config
    (Call ((CheckQuadAux_6 (1 2 12 ))8 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_6 (1 2 12 ))157 )(Bracket  (Variable e 4501 ))(Bracket  (Variable e 4499 )))
  Generalized MGUs: 
    (assign (par e 4501 )((par e x1 ))(B(par e 3759 )))
    (assign (par e 4499 )((par e x1 ))((par e 3759 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_6 (3 4 5 6 7 8 9 10 11 )((*(par e 4501 ))(*(par e 4499 ))))
produce conditions:

    (OR (T)(((par e 4501 ))to (BB(var e Neg11 )))(((par e 4499 ))to ()))
    (OR (D)(((par e 4501 ))to ((var e Neg12 )ABBABB(var e Neg13 )))(((par e 4499 ))to ()))
    (OR (T)(((par e 4501 ))to (BAB(var e Neg14 )))(((par e 4499 ))to ()))
    (OR (D)(((par e 4501 ))to ((var e Neg15 )ABAB(var e Neg16 )))(((par e 4499 ))to ()))
    (OR (T)(((par e 4501 ))to (A(var e Neg17 )))(((par e 4499 ))to ()))
    (OR (D)(((par e 4501 ))to ((var e Neg18 )AA(var e Neg19 )))(((par e 4499 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 6 0 0 0 ) and (0 6 0 0 ) with upper config
    (Call ((CheckQuadAux_6 (1 2 3 4 5 6 7 8 9 10 11 12 ))158 )(Bracket  (Variable e 4501 ))(Bracket  (Variable e 4519 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_6 (1 2 3 4 5 6 7 8 9 10 11 12 ))158 )(Bracket  (Variable e 4501 ))(Bracket  (Variable e 4519 )))
  Generalized MGUs: 
    (assign (par e 4519 )((par e 4519 ))((par e 4682 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 6 0 0 )With (assign (par e 4519 )((par e 4682 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 6 0 0 1 ) and (0 6 0 0 ) with upper config
    (Call ((CheckQuadAux_6 (1 2 3 4 5 6 7 8 9 10 11 12 ))158 )(Bracket  (Variable e 4501 ))(Bracket  (Variable e 4519 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_6 (1 2 3 4 5 6 7 8 9 10 11 12 ))158 )(Bracket  (Variable e 4501 ))(Bracket  (Variable e 4519 )))
  Generalized MGUs: 
    (assign (par e 4519 )((par e 4519 ))((par e 4683 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 6 0 0 )With (assign (par e 4519 )((par e 4683 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 6 0 1 0 ) and (0 6 0 1 ) with upper config
    (Call ((CheckQuadAux_6 (1 2 3 4 5 6 7 8 9 10 11 12 ))159 )(Bracket  (Variable e 4501 ))(Bracket  (Variable e 4529 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_6 (1 2 3 4 5 6 7 8 9 10 11 12 ))159 )(Bracket  (Variable e 4501 ))(Bracket  (Variable e 4529 )))
  Generalized MGUs: 
    (assign (par e 4529 )((par e 4529 ))((par e 5236 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 6 0 1 )With (assign (par e 4529 )((par e 5236 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 6 0 1 1 ) and (0 6 0 1 ) with upper config
    (Call ((CheckQuadAux_6 (1 2 3 4 5 6 7 8 9 10 11 12 ))159 )(Bracket  (Variable e 4501 ))(Bracket  (Variable e 4529 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_6 (1 2 3 4 5 6 7 8 9 10 11 12 ))159 )(Bracket  (Variable e 4501 ))(Bracket  (Variable e 4529 )))
  Generalized MGUs: 
    (assign (par e 4529 )((par e 4529 ))((par e 5237 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 6 0 1 )With (assign (par e 4529 )((par e 5237 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 7 0 ) and (0 7 ) with upper config
    (Call ((CheckQuadAux_7 (1 2 8 ))9 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_7 (1 2 8 ))185 )(Bracket  (Variable e 5919 ))(Bracket  (Variable e 5917 )))
  Generalized MGUs: 
    (assign (par e 5919 )((par e x1 ))(A(par e 5887 )))
    (assign (par e 5917 )((par e x1 ))((par e 5887 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_7 (3 4 5 6 7 )((*(par e 5919 ))(*(par e 5917 ))))
produce conditions:

    (OR (T)(((par e 5919 ))to (ABBB(var e Neg7 )))(((par e 5917 ))to ()))
    (OR (D)(((par e 5919 ))to ((var e Neg8 )ABBBABBB(var e Neg9 )))(((par e 5917 ))to ()))
    (OR (D)(((par e 5919 ))to ((var e Neg10 )ABBABB(var e Neg11 )))(((par e 5917 ))to ()))
    (OR (D)(((par e 5919 ))to ((var e Neg12 )ABAB(var e Neg13 )))(((par e 5917 ))to ()))
    (OR (D)(((par e 5919 ))to ((var e Neg14 )AA(var e Neg15 )))(((par e 5917 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 7 0 0 0 ) and (0 7 0 0 ) with upper config
    (Call ((CheckQuadAux_7 (1 2 3 4 5 6 7 8 ))186 )(Bracket  (Variable e 5919 ))(Bracket  (Variable e 5933 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_7 (1 2 3 4 5 6 7 8 ))186 )(Bracket  (Variable e 5919 ))(Bracket  (Variable e 5933 )))
  Generalized MGUs: 
    (assign (par e 5933 )((par e 5933 ))((par e 6097 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 7 0 0 )With (assign (par e 5933 )((par e 6097 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 7 0 0 1 ) and (0 7 0 0 ) with upper config
    (Call ((CheckQuadAux_7 (1 2 3 4 5 6 7 8 ))186 )(Bracket  (Variable e 5919 ))(Bracket  (Variable e 5933 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_7 (1 2 3 4 5 6 7 8 ))186 )(Bracket  (Variable e 5919 ))(Bracket  (Variable e 5933 )))
  Generalized MGUs: 
    (assign (par e 5933 )((par e 5933 ))((par e 6098 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 7 0 0 )With (assign (par e 5933 )((par e 6098 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 7 0 1 0 ) and (0 7 0 1 ) with upper config
    (Call ((CheckQuadAux_7 (1 2 3 4 5 6 7 8 ))187 )(Bracket  (Variable e 5919 ))(Bracket  (Variable e 5943 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_7 (1 2 3 4 5 6 7 8 ))187 )(Bracket  (Variable e 5919 ))(Bracket  (Variable e 5943 )))
  Generalized MGUs: 
    (assign (par e 5943 )((par e 5943 ))((par e 6596 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 7 0 1 )With (assign (par e 5943 )((par e 6596 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 7 0 1 1 ) and (0 7 0 1 ) with upper config
    (Call ((CheckQuadAux_7 (1 2 3 4 5 6 7 8 ))187 )(Bracket  (Variable e 5919 ))(Bracket  (Variable e 5943 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_7 (1 2 3 4 5 6 7 8 ))187 )(Bracket  (Variable e 5919 ))(Bracket  (Variable e 5943 )))
  Generalized MGUs: 
    (assign (par e 5943 )((par e 5943 ))((par e 6597 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 7 0 1 )With (assign (par e 5943 )((par e 6597 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 8 0 ) and (0 8 ) with upper config
    (Call ((CheckQuadAux_8 (1 2 8 ))10 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_8 (1 2 8 ))213 )(Bracket  (Variable e 7287 ))(Bracket  (Variable e 7285 )))
  Generalized MGUs: 
    (assign (par e 7287 )((par e x1 ))(A(par e 7260 )))
    (assign (par e 7285 )((par e x1 ))((par e 7260 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_8 (3 4 5 6 7 )((*(par e 7287 ))(*(par e 7285 ))))
produce conditions:

    (OR (T)(((par e 7287 ))to (BAAA(var e Neg7 )))(((par e 7285 ))to ()))
    (OR (D)(((par e 7287 ))to ((var e Neg8 )BAAABAAA(var e Neg9 )))(((par e 7285 ))to ()))
    (OR (D)(((par e 7287 ))to ((var e Neg10 )BAABAA(var e Neg11 )))(((par e 7285 ))to ()))
    (OR (D)(((par e 7287 ))to ((var e Neg12 )BABA(var e Neg13 )))(((par e 7285 ))to ()))
    (OR (D)(((par e 7287 ))to ((var e Neg14 )BB(var e Neg15 )))(((par e 7285 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 8 0 0 0 ) and (0 8 0 0 ) with upper config
    (Call ((CheckQuadAux_8 (1 2 3 4 5 6 7 8 ))214 )(Bracket  (Variable e 7287 ))(Bracket  (Variable e 7301 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_8 (1 2 3 4 5 6 7 8 ))214 )(Bracket  (Variable e 7287 ))(Bracket  (Variable e 7301 )))
  Generalized MGUs: 
    (assign (par e 7301 )((par e 7301 ))((par e 7465 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 8 0 0 )With (assign (par e 7301 )((par e 7465 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 8 0 0 1 ) and (0 8 0 0 ) with upper config
    (Call ((CheckQuadAux_8 (1 2 3 4 5 6 7 8 ))214 )(Bracket  (Variable e 7287 ))(Bracket  (Variable e 7301 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_8 (1 2 3 4 5 6 7 8 ))214 )(Bracket  (Variable e 7287 ))(Bracket  (Variable e 7301 )))
  Generalized MGUs: 
    (assign (par e 7301 )((par e 7301 ))((par e 7466 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 8 0 0 )With (assign (par e 7301 )((par e 7466 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 8 0 1 0 ) and (0 8 0 1 ) with upper config
    (Call ((CheckQuadAux_8 (1 2 3 4 5 6 7 8 ))215 )(Bracket  (Variable e 7287 ))(Bracket  (Variable e 7311 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_8 (1 2 3 4 5 6 7 8 ))215 )(Bracket  (Variable e 7287 ))(Bracket  (Variable e 7311 )))
  Generalized MGUs: 
    (assign (par e 7311 )((par e 7311 ))((par e 7964 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 8 0 1 )With (assign (par e 7311 )((par e 7964 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 8 0 1 1 ) and (0 8 0 1 ) with upper config
    (Call ((CheckQuadAux_8 (1 2 3 4 5 6 7 8 ))215 )(Bracket  (Variable e 7287 ))(Bracket  (Variable e 7311 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_8 (1 2 3 4 5 6 7 8 ))215 )(Bracket  (Variable e 7287 ))(Bracket  (Variable e 7311 )))
  Generalized MGUs: 
    (assign (par e 7311 )((par e 7311 ))((par e 7965 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 8 0 1 )With (assign (par e 7311 )((par e 7965 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 9 0 ) and (0 9 ) with upper config
    (Call ((CheckQuadAux_9 (1 2 12 ))11 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_9 (1 2 12 ))241 )(Bracket  (Variable e 8662 ))(Bracket  (Variable e 8660 )))
  Generalized MGUs: 
    (assign (par e 8662 )((par e x1 ))(A(par e 8628 )))
    (assign (par e 8660 )((par e x1 ))((par e 8628 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_9 (3 4 5 6 7 8 9 10 11 )((*(par e 8662 ))(*(par e 8660 ))))
produce conditions:

    (OR (T)(((par e 8662 ))to (AA(var e Neg11 )))(((par e 8660 ))to ()))
    (OR (D)(((par e 8662 ))to ((var e Neg12 )BAABAA(var e Neg13 )))(((par e 8660 ))to ()))
    (OR (T)(((par e 8662 ))to (ABA(var e Neg14 )))(((par e 8660 ))to ()))
    (OR (D)(((par e 8662 ))to ((var e Neg15 )BABA(var e Neg16 )))(((par e 8660 ))to ()))
    (OR (T)(((par e 8662 ))to (B(var e Neg17 )))(((par e 8660 ))to ()))
    (OR (D)(((par e 8662 ))to ((var e Neg18 )BB(var e Neg19 )))(((par e 8660 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 9 0 0 0 ) and (0 9 0 0 ) with upper config
    (Call ((CheckQuadAux_9 (1 2 3 4 5 6 7 8 9 10 11 12 ))242 )(Bracket  (Variable e 8662 ))(Bracket  (Variable e 8680 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_9 (1 2 3 4 5 6 7 8 9 10 11 12 ))242 )(Bracket  (Variable e 8662 ))(Bracket  (Variable e 8680 )))
  Generalized MGUs: 
    (assign (par e 8680 )((par e 8680 ))((par e 8843 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 9 0 0 )With (assign (par e 8680 )((par e 8843 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 9 0 0 1 ) and (0 9 0 0 ) with upper config
    (Call ((CheckQuadAux_9 (1 2 3 4 5 6 7 8 9 10 11 12 ))242 )(Bracket  (Variable e 8662 ))(Bracket  (Variable e 8680 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_9 (1 2 3 4 5 6 7 8 9 10 11 12 ))242 )(Bracket  (Variable e 8662 ))(Bracket  (Variable e 8680 )))
  Generalized MGUs: 
    (assign (par e 8680 )((par e 8680 ))((par e 8844 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 9 0 0 )With (assign (par e 8680 )((par e 8844 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 9 0 1 0 ) and (0 9 0 1 ) with upper config
    (Call ((CheckQuadAux_9 (1 2 3 4 5 6 7 8 9 10 11 12 ))243 )(Bracket  (Variable e 8662 ))(Bracket  (Variable e 8690 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_9 (1 2 3 4 5 6 7 8 9 10 11 12 ))243 )(Bracket  (Variable e 8662 ))(Bracket  (Variable e 8690 )))
  Generalized MGUs: 
    (assign (par e 8690 )((par e 8690 ))((par e 9397 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 9 0 1 )With (assign (par e 8690 )((par e 9397 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 9 0 1 1 ) and (0 9 0 1 ) with upper config
    (Call ((CheckQuadAux_9 (1 2 3 4 5 6 7 8 9 10 11 12 ))243 )(Bracket  (Variable e 8662 ))(Bracket  (Variable e 8690 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_9 (1 2 3 4 5 6 7 8 9 10 11 12 ))243 )(Bracket  (Variable e 8662 ))(Bracket  (Variable e 8690 )))
  Generalized MGUs: 
    (assign (par e 8690 )((par e 8690 ))((par e 9398 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 9 0 1 )With (assign (par e 8690 )((par e 9398 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 10 0 ) and (0 10 ) with upper config
    (Call ((CheckQuadAux_10 (1 2 8 ))12 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_10 (1 2 8 ))267 )(Bracket  (Variable e 10078 ))(Bracket  (Variable e 10076 )))
  Generalized MGUs: 
    (assign (par e 10078 )((par e x1 ))(A(par e 10048 )))
    (assign (par e 10076 )((par e x1 ))((par e 10048 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_10 (3 4 5 6 7 )((*(par e 10078 ))(*(par e 10076 ))))
produce conditions:

    (OR (T)(((par e 10078 ))to (BABA(var e Neg7 )))(((par e 10076 ))to ()))
    (OR (D)(((par e 10078 ))to ((var e Neg9 )BABABABA(var e Neg10 )))(((par e 10076 ))to ()))
    (OR (T)(((par e 10078 ))to (BBAB(var e Neg11 )))(((par e 10076 ))to ()))
    (OR (D)(((par e 10078 ))to ((var e Neg12 )BABBAB(var e Neg13 )))(((par e 10076 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 10 0 0 0 ) and (0 10 0 0 ) with upper config
    (Call ((CheckQuadAux_10 (1 2 3 5 6 7 8 ))268 )(Bracket  (Variable e 10078 ))(Bracket  (Variable e 10090 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_10 (1 2 3 5 6 7 8 ))268 )(Bracket  (Variable e 10078 ))(Bracket  (Variable e 10090 )))
  Generalized MGUs: 
    (assign (par e 10090 )((par e 10090 ))((par e 10179 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 10 0 0 )With (assign (par e 10090 )((par e 10179 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 10 0 0 1 ) and (0 10 0 0 ) with upper config
    (Call ((CheckQuadAux_10 (1 2 3 5 6 7 8 ))268 )(Bracket  (Variable e 10078 ))(Bracket  (Variable e 10090 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_10 (1 2 3 5 6 7 8 ))268 )(Bracket  (Variable e 10078 ))(Bracket  (Variable e 10090 )))
  Generalized MGUs: 
    (assign (par e 10090 )((par e 10090 ))((par e 10180 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 10 0 0 )With (assign (par e 10090 )((par e 10180 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 10 0 1 0 ) and (0 10 0 1 ) with upper config
    (Call ((CheckQuadAux_10 (1 2 3 5 6 7 8 ))269 )(Bracket  (Variable e 10078 ))(Bracket  (Variable e 10097 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_10 (1 2 3 5 6 7 8 ))269 )(Bracket  (Variable e 10078 ))(Bracket  (Variable e 10097 )))
  Generalized MGUs: 
    (assign (par e 10097 )((par e 10097 ))((par e 10348 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 10 0 1 )With (assign (par e 10097 )((par e 10348 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 10 0 1 1 ) and (0 10 0 1 ) with upper config
    (Call ((CheckQuadAux_10 (1 2 3 5 6 7 8 ))269 )(Bracket  (Variable e 10078 ))(Bracket  (Variable e 10097 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_10 (1 2 3 5 6 7 8 ))269 )(Bracket  (Variable e 10078 ))(Bracket  (Variable e 10097 )))
  Generalized MGUs: 
    (assign (par e 10097 )((par e 10097 ))((par e 10349 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 10 0 1 )With (assign (par e 10097 )((par e 10349 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 11 0 ) and (0 11 ) with upper config
    (Call ((CheckQuadAux_11 (1 2 9 ))13 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_11 (1 2 9 ))286 )(Bracket  (Variable e 10549 ))(Bracket  (Variable e 10547 )))
  Generalized MGUs: 
    (assign (par e 10549 )((par e x1 ))(A(par e 10517 )))
    (assign (par e 10547 )((par e x1 ))((par e 10517 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_11 (3 4 5 6 7 8 )((*(par e 10549 ))(*(par e 10547 ))))
produce conditions:

    (OR (T)(((par e 10549 ))to (BABB(var e Neg7 )))(((par e 10547 ))to ()))
    (OR (D)(((par e 10549 ))to ((var e Neg9 )BABBBABB(var e Neg10 )))(((par e 10547 ))to ()))
    (OR (T)(((par e 10549 ))to (AB(var e Neg11 )))(((par e 10547 ))to ()))
    (OR (D)(((par e 10549 ))to ((var e Neg12 )BABBAB(var e Neg13 )))(((par e 10547 ))to ()))
    (OR (D)(((par e 10549 ))to ((var e Neg14 )BABA(var e Neg15 )))(((par e 10547 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 11 0 0 0 ) and (0 11 0 0 ) with upper config
    (Call ((CheckQuadAux_11 (1 2 3 4 5 6 7 8 9 ))287 )(Bracket  (Variable e 10549 ))(Bracket  (Variable e 10563 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_11 (1 2 3 4 5 6 7 8 9 ))287 )(Bracket  (Variable e 10549 ))(Bracket  (Variable e 10563 )))
  Generalized MGUs: 
    (assign (par e 10563 )((par e 10563 ))((par e 10697 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 11 0 0 )With (assign (par e 10563 )((par e 10697 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 11 0 0 1 ) and (0 11 0 0 ) with upper config
    (Call ((CheckQuadAux_11 (1 2 3 4 5 6 7 8 9 ))287 )(Bracket  (Variable e 10549 ))(Bracket  (Variable e 10563 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_11 (1 2 3 4 5 6 7 8 9 ))287 )(Bracket  (Variable e 10549 ))(Bracket  (Variable e 10563 )))
  Generalized MGUs: 
    (assign (par e 10563 )((par e 10563 ))((par e 10698 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 11 0 0 )With (assign (par e 10563 )((par e 10698 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 11 0 1 0 ) and (0 11 0 1 ) with upper config
    (Call ((CheckQuadAux_11 (1 2 3 4 5 6 7 8 9 ))288 )(Bracket  (Variable e 10549 ))(Bracket  (Variable e 10572 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_11 (1 2 3 4 5 6 7 8 9 ))288 )(Bracket  (Variable e 10549 ))(Bracket  (Variable e 10572 )))
  Generalized MGUs: 
    (assign (par e 10572 )((par e 10572 ))((par e 10977 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 11 0 1 )With (assign (par e 10572 )((par e 10977 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 11 0 1 1 ) and (0 11 0 1 ) with upper config
    (Call ((CheckQuadAux_11 (1 2 3 4 5 6 7 8 9 ))288 )(Bracket  (Variable e 10549 ))(Bracket  (Variable e 10572 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_11 (1 2 3 4 5 6 7 8 9 ))288 )(Bracket  (Variable e 10549 ))(Bracket  (Variable e 10572 )))
  Generalized MGUs: 
    (assign (par e 10572 )((par e 10572 ))((par e 10978 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 11 0 1 )With (assign (par e 10572 )((par e 10978 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 12 0 ) and (0 12 ) with upper config
    (Call ((CheckQuadAux_12 (1 2 7 ))14 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_12 (1 2 7 ))305 )(Bracket  (Variable e 11280 ))(Bracket  (Variable e 11278 )))
  Generalized MGUs: 
    (assign (par e 11280 )((par e x1 ))(A(par e 11257 )))
    (assign (par e 11278 )((par e x1 ))((par e 11257 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_12 (3 4 5 6 )((*(par e 11280 ))(*(par e 11278 ))))
produce conditions:

    (OR (T)(((par e 11280 ))to (BBAA(var e Neg6 )))(((par e 11278 ))to ()))
    (OR (D)(((par e 11280 ))to ((var e Neg7 )BBAABBAA(var e Neg8 )))(((par e 11278 ))to ()))
    (OR (D)(((par e 11280 ))to ((var e Neg9 )BBABBA(var e Neg10 )))(((par e 11278 ))to ()))
    (OR (D)(((par e 11280 ))to ((var e Neg11 )BBBB(var e Neg12 )))(((par e 11278 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 12 0 0 0 ) and (0 12 0 0 ) with upper config
    (Call ((CheckQuadAux_12 (1 2 3 4 5 6 7 ))306 )(Bracket  (Variable e 11280 ))(Bracket  (Variable e 11292 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_12 (1 2 3 4 5 6 7 ))306 )(Bracket  (Variable e 11280 ))(Bracket  (Variable e 11292 )))
  Generalized MGUs: 
    (assign (par e 11292 )((par e 11292 ))((par e 11408 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 12 0 0 )With (assign (par e 11292 )((par e 11408 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 12 0 0 1 ) and (0 12 0 0 ) with upper config
    (Call ((CheckQuadAux_12 (1 2 3 4 5 6 7 ))306 )(Bracket  (Variable e 11280 ))(Bracket  (Variable e 11292 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_12 (1 2 3 4 5 6 7 ))306 )(Bracket  (Variable e 11280 ))(Bracket  (Variable e 11292 )))
  Generalized MGUs: 
    (assign (par e 11292 )((par e 11292 ))((par e 11409 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 12 0 0 )With (assign (par e 11292 )((par e 11409 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 12 0 1 0 ) and (0 12 0 1 ) with upper config
    (Call ((CheckQuadAux_12 (1 2 3 4 5 6 7 ))307 )(Bracket  (Variable e 11280 ))(Bracket  (Variable e 11300 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_12 (1 2 3 4 5 6 7 ))307 )(Bracket  (Variable e 11280 ))(Bracket  (Variable e 11300 )))
  Generalized MGUs: 
    (assign (par e 11300 )((par e 11300 ))((par e 11628 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 12 0 1 )With (assign (par e 11300 )((par e 11628 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 12 0 1 1 ) and (0 12 0 1 ) with upper config
    (Call ((CheckQuadAux_12 (1 2 3 4 5 6 7 ))307 )(Bracket  (Variable e 11280 ))(Bracket  (Variable e 11300 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_12 (1 2 3 4 5 6 7 ))307 )(Bracket  (Variable e 11280 ))(Bracket  (Variable e 11300 )))
  Generalized MGUs: 
    (assign (par e 11300 )((par e 11300 ))((par e 11629 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 12 0 1 )With (assign (par e 11300 )((par e 11629 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 13 0 ) and (0 13 ) with upper config
    (Call ((CheckQuadAux_13 (1 2 10 ))15 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_13 (1 2 10 ))324 )(Bracket  (Variable e 11874 ))(Bracket  (Variable e 11872 )))
  Generalized MGUs: 
    (assign (par e 11874 )((par e x1 ))(A(par e 11848 )))
    (assign (par e 11872 )((par e x1 ))((par e 11848 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_13 (3 4 5 6 7 8 9 )((*(par e 11874 ))(*(par e 11872 ))))
produce conditions:

    (OR (T)(((par e 11874 ))to (BBAB(var e Neg6 )))(((par e 11872 ))to ()))
    (OR (D)(((par e 11874 ))to ((var e Neg8 )BBABBBAB(var e Neg9 )))(((par e 11872 ))to ()))
    (OR (T)(((par e 11874 ))to (BA(var e Neg10 )))(((par e 11872 ))to ()))
    (OR (D)(((par e 11874 ))to ((var e Neg11 )BBABBA(var e Neg12 )))(((par e 11872 ))to ()))
    (OR (T)(((par e 11874 ))to (BBB(var e Neg13 )))(((par e 11872 ))to ()))
    (OR (D)(((par e 11874 ))to ((var e Neg14 )BBBB(var e Neg15 )))(((par e 11872 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 13 0 0 0 ) and (0 13 0 0 ) with upper config
    (Call ((CheckQuadAux_13 (1 2 3 4 5 6 7 8 9 10 ))325 )(Bracket  (Variable e 11874 ))(Bracket  (Variable e 11889 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_13 (1 2 3 4 5 6 7 8 9 10 ))325 )(Bracket  (Variable e 11874 ))(Bracket  (Variable e 11889 )))
  Generalized MGUs: 
    (assign (par e 11889 )((par e 11889 ))((par e 12036 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 13 0 0 )With (assign (par e 11889 )((par e 12036 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 13 0 0 1 ) and (0 13 0 0 ) with upper config
    (Call ((CheckQuadAux_13 (1 2 3 4 5 6 7 8 9 10 ))325 )(Bracket  (Variable e 11874 ))(Bracket  (Variable e 11889 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_13 (1 2 3 4 5 6 7 8 9 10 ))325 )(Bracket  (Variable e 11874 ))(Bracket  (Variable e 11889 )))
  Generalized MGUs: 
    (assign (par e 11889 )((par e 11889 ))((par e 12037 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 13 0 0 )With (assign (par e 11889 )((par e 12037 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 13 0 1 0 ) and (0 13 0 1 ) with upper config
    (Call ((CheckQuadAux_13 (1 2 3 4 5 6 7 8 9 10 ))326 )(Bracket  (Variable e 11874 ))(Bracket  (Variable e 11899 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_13 (1 2 3 4 5 6 7 8 9 10 ))326 )(Bracket  (Variable e 11874 ))(Bracket  (Variable e 11899 )))
  Generalized MGUs: 
    (assign (par e 11899 )((par e 11899 ))((par e 12349 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 13 0 1 )With (assign (par e 11899 )((par e 12349 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 13 0 1 1 ) and (0 13 0 1 ) with upper config
    (Call ((CheckQuadAux_13 (1 2 3 4 5 6 7 8 9 10 ))326 )(Bracket  (Variable e 11874 ))(Bracket  (Variable e 11899 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_13 (1 2 3 4 5 6 7 8 9 10 ))326 )(Bracket  (Variable e 11874 ))(Bracket  (Variable e 11899 )))
  Generalized MGUs: 
    (assign (par e 11899 )((par e 11899 ))((par e 12350 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 13 0 1 )With (assign (par e 11899 )((par e 12350 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 14 0 ) and (0 14 ) with upper config
    (Call ((CheckQuadAux_14 (1 2 7 ))16 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_14 (1 2 7 ))343 )(Bracket  (Variable e 12685 ))(Bracket  (Variable e 12683 )))
  Generalized MGUs: 
    (assign (par e 12685 )((par e x1 ))(A(par e 12662 )))
    (assign (par e 12683 )((par e x1 ))((par e 12662 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_14 (3 4 5 6 )((*(par e 12685 ))(*(par e 12683 ))))
produce conditions:

    (OR (T)(((par e 12685 ))to (BBBA(var e Neg6 )))(((par e 12683 ))to ()))
    (OR (D)(((par e 12685 ))to ((var e Neg7 )BBBABBBA(var e Neg8 )))(((par e 12683 ))to ()))
    (OR (D)(((par e 12685 ))to ((var e Neg11 )BBBB(var e Neg12 )))(((par e 12683 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 14 0 0 0 ) and (0 14 0 0 ) with upper config
    (Call ((CheckQuadAux_14 (1 2 3 4 5 6 7 ))344 )(Bracket  (Variable e 12685 ))(Bracket  (Variable e 12697 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_14 (1 2 3 4 5 6 7 ))344 )(Bracket  (Variable e 12685 ))(Bracket  (Variable e 12697 )))
  Generalized MGUs: 
    (assign (par e 12697 )((par e 12697 ))((par e 12798 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 14 0 0 )With (assign (par e 12697 )((par e 12798 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 14 0 0 1 ) and (0 14 0 0 ) with upper config
    (Call ((CheckQuadAux_14 (1 2 3 4 5 6 7 ))344 )(Bracket  (Variable e 12685 ))(Bracket  (Variable e 12697 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_14 (1 2 3 4 5 6 7 ))344 )(Bracket  (Variable e 12685 ))(Bracket  (Variable e 12697 )))
  Generalized MGUs: 
    (assign (par e 12697 )((par e 12697 ))((par e 12799 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 14 0 0 )With (assign (par e 12697 )((par e 12799 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 14 0 1 0 ) and (0 14 0 1 ) with upper config
    (Call ((CheckQuadAux_14 (1 2 3 4 5 6 7 ))345 )(Bracket  (Variable e 12685 ))(Bracket  (Variable e 12703 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_14 (1 2 3 4 5 6 7 ))345 )(Bracket  (Variable e 12685 ))(Bracket  (Variable e 12703 )))
  Generalized MGUs: 
    (assign (par e 12703 )((par e 12703 ))((par e 13048 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 14 0 1 )With (assign (par e 12703 )((par e 13048 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 14 0 1 1 ) and (0 14 0 1 ) with upper config
    (Call ((CheckQuadAux_14 (1 2 3 4 5 6 7 ))345 )(Bracket  (Variable e 12685 ))(Bracket  (Variable e 12703 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_14 (1 2 3 4 5 6 7 ))345 )(Bracket  (Variable e 12685 ))(Bracket  (Variable e 12703 )))
  Generalized MGUs: 
    (assign (par e 12703 )((par e 12703 ))((par e 13049 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 14 0 1 )With (assign (par e 12703 )((par e 13049 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  GENERALIZED UPWARDS: (0 15 0 ) and (0 15 ) with upper config
    (Call ((CheckQuadAux_15 (1 2 10 ))17 )(Bracket  (Variable e x1 ))(Bracket  (Variable e x1 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_15 (1 2 10 ))362 )(Bracket  (Variable e 13326 ))(Bracket  (Variable e 13324 )))
  Generalized MGUs: 
    (assign (par e 13326 )((par e x1 ))(A(par e 13298 )))
    (assign (par e 13324 )((par e x1 ))((par e 13298 )))
  Generalized Equations: 

*********************************************************************************

Getting negative conditions from rules set:

    (CheckQuadAux_15 (3 4 5 6 7 8 9 )((*(par e 13326 ))(*(par e 13324 ))))
produce conditions:

    (OR (T)(((par e 13326 ))to (BB(var e Neg12 )))(((par e 13324 ))to ()))
    (OR (D)(((par e 13326 ))to ((var e Neg13 )BBBBBB(var e Neg14 )))(((par e 13324 ))to ()))
=================================================================================
  FOLDING ATTEMPT: (0 15 0 0 0 ) and (0 15 0 0 ) with upper config
    (Call ((CheckQuadAux_15 (1 2 3 7 8 9 10 ))363 )(Bracket  (Variable e 13326 ))(Bracket  (Variable e 13340 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_15 (1 2 3 7 8 9 10 ))363 )(Bracket  (Variable e 13326 ))(Bracket  (Variable e 13340 )))
  Generalized MGUs: 
    (assign (par e 13340 )((par e 13340 ))((par e 13397 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 15 0 0 )With (assign (par e 13340 )((par e 13397 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 15 0 0 1 ) and (0 15 0 0 ) with upper config
    (Call ((CheckQuadAux_15 (1 2 3 7 8 9 10 ))363 )(Bracket  (Variable e 13326 ))(Bracket  (Variable e 13340 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_15 (1 2 3 7 8 9 10 ))363 )(Bracket  (Variable e 13326 ))(Bracket  (Variable e 13340 )))
  Generalized MGUs: 
    (assign (par e 13340 )((par e 13340 ))((par e 13398 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 15 0 0 )With (assign (par e 13340 )((par e 13398 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 15 0 1 0 ) and (0 15 0 1 ) with upper config
    (Call ((CheckQuadAux_15 (1 2 3 7 8 9 10 ))364 )(Bracket  (Variable e 13326 ))(Bracket  (Variable e 13344 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_15 (1 2 3 7 8 9 10 ))364 )(Bracket  (Variable e 13326 ))(Bracket  (Variable e 13344 )))
  Generalized MGUs: 
    (assign (par e 13344 )((par e 13344 ))((par e 13584 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 15 0 1 )With (assign (par e 13344 )((par e 13584 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
=================================================================================
  FOLDING ATTEMPT: (0 15 0 1 1 ) and (0 15 0 1 ) with upper config
    (Call ((CheckQuadAux_15 (1 2 3 7 8 9 10 ))364 )(Bracket  (Variable e 13326 ))(Bracket  (Variable e 13344 )))

  Generalized Pattern: 
    (Call ((CheckQuadAux_15 (1 2 3 7 8 9 10 ))364 )(Bracket  (Variable e 13326 ))(Bracket  (Variable e 13344 )))
  Generalized MGUs: 
    (assign (par e 13344 )((par e 13344 ))((par e 13585 )))
  Generalized Equations: 
********************************************************************************

Looped To (0 15 0 1 )With (assign (par e 13344 )((par e 13585 )))and (Generic )(Negative )
  Checking embedding:



  Equations are preserved:

  Inequalities are preserved:
