/*
 Программа вычисляет сумму квадратов чисел от 1 до e.x
 При этом e.x записано в унарной системе счисления, как N символов 'I'.
 Функции умножения и сложения реализованы через ассоциативное приписывание.
 Тест на развертку вызовов на одном стековом уровне.
*/

/***********************************************/
/*          исходная программа                 */
/***********************************************/
$ENTRY Go {
	 e.x = <Sq e.x'I'>;
}

Sq {
	 = ;
	'I' e.x = <Add1 (<Mul1 ('I'e.x)'I'e.x>) <Sq e.x>>;
}

Mul1 {
	()       e.y = ;
	('I'e.x) e.y = e.y <Mul1 (e.x)e.y>;
}

Add1 {
	(e.x) e.y = e.x e.y;
}

/***********************************************/
/*          остаточная программа               */
/***********************************************/
/*
$ENTRY Go {
 e.1 =  <Sq_2_0 () (e.1)>;
}


Mul1_2_0 {
 (e.1) (e.2) ('I' e.3) (e.4) =  <Mul1_2_0 (e.1 'I' e.2 'I') (e.4) (e.3) (e.4)>;
 (e.1) (e.2) () (e.3) =  <Sq_2_0 (e.1 'I' e.2 'II' e.3 'I') (e.3)>;
}


Sq_2_0 {
 (e.1) ('I' e.2) =  <Mul1_2_0 (e.1) (e.2) (e.2) (e.2)>;
 (e.1) () =  e.1 'I';
}
*/

/*
  Произошло частичное вычисление функции Sq для x+1, причем единица была приписана к аргументу с конца.
*/
