/*
 Проверка, содержит ли порождаемая алгоритмом замены всех термов на 'A' букву 'B'. 
 Алгоритм замены работает с начала строки, алгоритм проверки - с конца.
 Усложнённый тест test_ba1.ref.
 Теперь уравнение, получившееся при обобщении, трансформируется при
 сужениях по третьему правилу Check, и при вложении происходит проверка,
 сохраняется ли оно.
*/

/***********************************************/
/*          исходная программа                 */
/***********************************************/

$ENTRY Go {
	 e.x = <Check <F e.x>>;
}

F {
	 = ;
	t.x e.1 = 'A' <F e.1>;
}

Check {
	 = 'T';
	e.1 'B' = 'F';
	e.Z t.1 = <Check e.Z>;
}

/***********************************************/
/*          остаточная программа               */
/***********************************************/

/*
$ENTRY Go {
 e.1 =  <Check_0 () (e.1)>;
}


Check_13_0 {
 =  'T';
 e.1 'A' =  <Check_13_0 e.1>;
}


Check_0 {
 (e.1) () =  <Check_13_0 e.1>;
 (e.1) (t.1 e.2) =  <Check_0 (e.1 'A') (e.2)>;
}
*/

/*
 Опять в процессе развертки функции F порождается уравнение 'A'w = w'A' на слово w, которое она передает функции Check.
 Это уравнение наследуется всеми узлами развертки функции Check.

 После подстановки сужения на w вида w=v'B' в это уравнение множество его корней становится пустым. 
 Поэтому ветвь функции Check, возвращающая 'F', отсекается.
*/

