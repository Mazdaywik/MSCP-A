/*
 Важный отрицательный тест на сохранение уравнений при вложении.
 Здесь суперкомпилятором сначала строится обобщение по второму
 правилу функции F, и это обобщение считает, что F всегда выкидывает
 буквы 'A'. Однако проход по третьему правилу эту гипотезу
 опровергает, и указанная информация отбрасывается.

 Если бы в третьем предложении функции F стояло аналогичное условие на 'C',
 ветка вычислений, возвращающая 'F', также бы не обрубилась.
*/

/***********************************************/
/*          исходная программа                 */
/***********************************************/
$ENTRY Go {
	e.x = <Check <F e.x>>;
}

F {
	 = ;
	'A' e.1 = 'A' <F e.1>;
	'B' e.1 = 'B' <F e.1>;
}

Check {
	e.1 'B' = 'F';
	e.Z = 'T';
}

/***********************************************/
/*          остаточная программа               */
/***********************************************/

/*
$ENTRY Go {
 e.1 =  <Check_0 () (e.1)>;
}


Check_0 {
 (e.1 'B') () =  'F';
 (e.1) () =  'T';
 (e.1) ('A' e.2) =  <Check_0 (e.1 'A') (e.2)>;
 (e.1) ('B' e.2) =  <Check_0 (e.1 'B') (e.2)>;
}
*/
